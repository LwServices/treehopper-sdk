package io.treehopper.libraries.sensors.magnetic.ak8975;

import io.treehopper.libraries.RegisterManager;
import io.treehopper.libraries.Register;
import io.treehopper.SMBusDevice;
import java.util.Arrays;

/// This file was auto-generated by RegisterGenerator. Any changes to it will be overwritten!
class Ak8975Registers extends RegisterManager
{
    SMBusDevice _dev;
    Ak8975Registers(SMBusDevice dev)
    {
        super(dev);
        Wia = new WiaRegister(this);
        _registers.add(Wia);
        Info = new InfoRegister(this);
        _registers.add(Info);
        Status1 = new Status1Register(this);
        _registers.add(Status1);
        Hx = new HxRegister(this);
        _registers.add(Hx);
        Hy = new HyRegister(this);
        _registers.add(Hy);
        Hz = new HzRegister(this);
        _registers.add(Hz);
        Status2 = new Status2Register(this);
        _registers.add(Status2);
        Control = new ControlRegister(this);
        _registers.add(Control);
        SensitivityX = new SensitivityXRegister(this);
        _registers.add(SensitivityX);
        SensitivityY = new SensitivityYRegister(this);
        _registers.add(SensitivityY);
        SensitivityZ = new SensitivityZRegister(this);
        _registers.add(SensitivityZ);
    }

    WiaRegister Wia;
    InfoRegister Info;
    Status1Register Status1;
    HxRegister Hx;
    HyRegister Hy;
    HzRegister Hz;
    Status2Register Status2;
    ControlRegister Control;
    SensitivityXRegister SensitivityX;
    SensitivityYRegister SensitivityY;
    SensitivityZRegister SensitivityZ;

    class WiaRegister extends Register
    {
        WiaRegister(RegisterManager regManager) { super(regManager, 0x00, 1, false); }

        int Value;


        public WiaRegister read()
        {
            manager.read(this);
            return this;
        }

        public long getValue() { return ((Value & 0xFF) << 0); }
        public void setValue(long value)
        {
            Value = (int)((value >> 0) & 0xFF);
        }
    }
    class InfoRegister extends Register
    {
        InfoRegister(RegisterManager regManager) { super(regManager, 0x01, 1, false); }

        int Value;


        public InfoRegister read()
        {
            manager.read(this);
            return this;
        }

        public long getValue() { return ((Value & 0xFF) << 0); }
        public void setValue(long value)
        {
            Value = (int)((value >> 0) & 0xFF);
        }
    }
    class Status1Register extends Register
    {
        Status1Register(RegisterManager regManager) { super(regManager, 0x02, 1, false); }

        int Drdy;


        public Status1Register read()
        {
            manager.read(this);
            return this;
        }

        public long getValue() { return ((Drdy & 0x1) << 0); }
        public void setValue(long value)
        {
            Drdy = (int)((value >> 0) & 0x1);
        }
    }
    class HxRegister extends Register
    {
        HxRegister(RegisterManager regManager) { super(regManager, 0x03, 2, false); }

        int Value;


        public HxRegister read()
        {
            manager.read(this);
            return this;
        }

        public long getValue() { return ((Value & 0xFFFF) << 0); }
        public void setValue(long value)
        {
            Value = (int)(((value >> 0) & 0xFFFF) << (32 - 16)) >> (32 - 16);
        }
    }
    class HyRegister extends Register
    {
        HyRegister(RegisterManager regManager) { super(regManager, 0x05, 2, false); }

        int Value;


        public HyRegister read()
        {
            manager.read(this);
            return this;
        }

        public long getValue() { return ((Value & 0xFFFF) << 0); }
        public void setValue(long value)
        {
            Value = (int)(((value >> 0) & 0xFFFF) << (32 - 16)) >> (32 - 16);
        }
    }
    class HzRegister extends Register
    {
        HzRegister(RegisterManager regManager) { super(regManager, 0x07, 2, false); }

        int Value;


        public HzRegister read()
        {
            manager.read(this);
            return this;
        }

        public long getValue() { return ((Value & 0xFFFF) << 0); }
        public void setValue(long value)
        {
            Value = (int)(((value >> 0) & 0xFFFF) << (32 - 16)) >> (32 - 16);
        }
    }
    class Status2Register extends Register
    {
        Status2Register(RegisterManager regManager) { super(regManager, 0x09, 1, false); }

        int Derr;
        int Hofl;


        public Status2Register read()
        {
            manager.read(this);
            return this;
        }

        public long getValue() { return ((Derr & 0x1) << 2) | ((Hofl & 0x1) << 3); }
        public void setValue(long value)
        {
            Derr = (int)((value >> 2) & 0x1);
            Hofl = (int)((value >> 3) & 0x1);
        }
    }
    class ControlRegister extends Register
    {
        ControlRegister(RegisterManager regManager) { super(regManager, 0x0a, 1, false); }

        int Mode;


        public ControlRegister read()
        {
            manager.read(this);
            return this;
        }

        public long getValue() { return ((Mode & 0xF) << 0); }
        public void setValue(long value)
        {
            Mode = (int)((value >> 0) & 0xF);
        }
    }
    class SensitivityXRegister extends Register
    {
        SensitivityXRegister(RegisterManager regManager) { super(regManager, 0x10, 1, false); }

        int Value;


        public SensitivityXRegister read()
        {
            manager.read(this);
            return this;
        }

        public long getValue() { return ((Value & 0xFF) << 0); }
        public void setValue(long value)
        {
            Value = (int)((value >> 0) & 0xFF);
        }
    }
    class SensitivityYRegister extends Register
    {
        SensitivityYRegister(RegisterManager regManager) { super(regManager, 0x11, 1, false); }

        int Value;


        public SensitivityYRegister read()
        {
            manager.read(this);
            return this;
        }

        public long getValue() { return ((Value & 0xFF) << 0); }
        public void setValue(long value)
        {
            Value = (int)((value >> 0) & 0xFF);
        }
    }
    class SensitivityZRegister extends Register
    {
        SensitivityZRegister(RegisterManager regManager) { super(regManager, 0x12, 1, false); }

        int Value;


        public SensitivityZRegister read()
        {
            manager.read(this);
            return this;
        }

        public long getValue() { return ((Value & 0xFF) << 0); }
        public void setValue(long value)
        {
            Value = (int)((value >> 0) & 0xFF);
        }
    }
}
